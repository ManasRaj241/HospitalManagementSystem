{"file":"appointment-booking.entry.esm.js","mappings":"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","names":[],"sources":["src/components/Appointment/appointment-booking.css?tag=appointment-booking&encapsulation=shadow","src/components/Appointment/appointment-booking.tsx"],"sourcesContent":[".appointment-booking {\r\n    text-align: center;\r\n    padding: 20px;\r\n    animation: fadeIn 1s ease;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 24px;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group {\r\n    text-align: left;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    font-size: 16px;\r\n    color: #333;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"],\r\n  input[type=\"number\"],\r\n  input[type=\"tel\"],\r\n  select,\r\n  textarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  select {\r\n    appearance: none;\r\n  }\r\n  \r\n  textarea {\r\n    resize: vertical;\r\n  }\r\n  \r\n  button {\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(-10px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  \r\n  .appointment-booking {\r\n    position: relative;\r\n  }\r\n  \r\n  .popup-form {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    z-index: 999;\r\n  }\r\n  \r\n  .popup-content {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n    text-align: center;\r\n  }\r\n  \r\n  .popup-content h3 {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .popup-content button {\r\n    background-color: #007BFF;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .popup-content button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  ","import { Component, h, State, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'appointment-booking',\r\n  styleUrl: 'appointment-booking.css',\r\n  shadow: true,\r\n})\r\nexport class AppointmentBooking {\r\n  @State() formData = {\r\n    name: '',\r\n    age: '',\r\n    gender: '',\r\n    phoneNumber: '',\r\n    diseaseCategory: '',\r\n    reason: '',\r\n    hospital: '',\r\n    doctor: '',\r\n    problemDescription: '',\r\n  };\r\n\r\n  @State() showSuccessPopup: boolean = false;\r\n  @State() selectedDoctor: string = '';\r\n  @State() selectedHospital: string = '';\r\n  @State() selectedReason: string = '';\r\n  @State() diseaseCategories: string[] = [];\r\n  @State() reasons: string[] = [];\r\n  @State() hospitals: string[] = [];\r\n  @State() doctors: { id: string; name: string; pricePerHour: number; specialization: string; hospitalName: string }[] = [];\r\n\r\n  async componentDidLoad() {\r\n    await this.fetchData();\r\n  }\r\n\r\n  handleDoctorChange(event: Event) {\r\n    const selectedDoctor = (event.target as HTMLSelectElement).value;\r\n    this.selectedDoctor = selectedDoctor;\r\n    this.formData.doctor = selectedDoctor;\r\n  }\r\n\r\n  async handleHospitalChange(event: Event) {\r\n    const selectedHospital = (event.target as HTMLSelectElement).value;\r\n    this.selectedHospital = selectedHospital;\r\n\r\n    try {\r\n      const doctorsResponse = await fetch(`https://localhost:7183/api/doctors`);\r\n      if (doctorsResponse.ok) {\r\n        const allDoctors = await doctorsResponse.json();\r\n        console.log(allDoctors);\r\n        this.doctors = allDoctors.filter((doctor: any) => doctor.hospitalName === selectedHospital && doctor.specialization === this.formData.diseaseCategory);\r\n        console.log(this.doctors);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching doctors:', error);\r\n    }\r\n  }\r\n\r\n  async handleReasonChange(event: Event) {\r\n    const selectedReason = (event.target as HTMLSelectElement).value;\r\n    this.selectedReason = selectedReason;\r\n\r\n    try {\r\n      const hospitalsResponse = await fetch(`https://localhost:7183/api/Hospitals`);\r\n      if (hospitalsResponse.ok) {\r\n        const hospitalData = await hospitalsResponse.json();\r\n        const filteredHospitals = hospitalData.filter((hospital: any) =>\r\n          hospital.hospitalServices\r\n            .split(',')\r\n            .map(service => service.trim())\r\n            .includes(selectedReason),\r\n        );\r\n        this.hospitals = filteredHospitals.map((hospital: any) => hospital.hospitalName);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching hospitals:', error);\r\n    }\r\n  }\r\n\r\n  handleInputChange(event: Event, field: string) {\r\n    this.formData[field] = (event.target as HTMLInputElement).value;\r\n  }\r\n\r\n  async fetchData() {\r\n    try {\r\n      // Fetch data for disease categories and reasons\r\n      const hospitalDataResponse = await fetch('https://localhost:7183/api/Hospitals');\r\n      if (hospitalDataResponse.ok) {\r\n        const hospitalData = await hospitalDataResponse.json();\r\n        const services = hospitalData.map((hospital: any) => hospital.hospitalServices).join(',');\r\n        this.diseaseCategories = Array.from(new Set(services.split(',')));\r\n        this.reasons = Array.from(new Set(services.split(',')));\r\n      }\r\n\r\n      // Fetch data for hospitals\r\n      const hospitalsResponse = await fetch('https://localhost:7183/api/Hospitals');\r\n      if (hospitalsResponse.ok) {\r\n        const hospitalData = await hospitalsResponse.json();\r\n        this.hospitals = hospitalData.filter((hospital: any) => hospital.hospitalServices.includes(this.formData.diseaseCategory)).map((hospital: any) => hospital.name);\r\n      }\r\n\r\n      // Fetch data for doctors\r\n      const doctorsResponse = await fetch('https://localhost:7183/api/doctors');\r\n      if (doctorsResponse.ok) {\r\n        this.doctors = await doctorsResponse.json();\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching data:', error);\r\n    }\r\n  }\r\n\r\n  @Watch('formData.diseaseCategory')\r\n  handleDiseaseCategoryChange(_newValue: string) {\r\n    this.hospitals = [];\r\n    this.formData.hospital = '';\r\n    this.fetchData();\r\n  }\r\n\r\n  handleSubmit(event: Event) {\r\n    event.preventDefault();\r\n    const bookingData = {\r\n      patientName: this.formData.name,\r\n      doctorName: this.formData.doctor,\r\n      status: 'Booked',\r\n    };\r\n    this.postBookingData(bookingData);\r\n  }\r\n\r\n  async postBookingData(bookingData: any) {\r\n    try {\r\n      const apiUrl = 'https://localhost:7183/api/bookings';\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(bookingData),\r\n      });\r\n\r\n      this.showSuccessPopup = true;\r\n      if (response.ok) {\r\n        console.log('Appointment booked successfully');\r\n        this.formData = {\r\n          name: '',\r\n          age: '',\r\n          gender: '',\r\n          phoneNumber: '',\r\n          diseaseCategory: '',\r\n          reason: '',\r\n          hospital: '',\r\n          doctor: '',\r\n          problemDescription: '',\r\n        };\r\n        this.selectedDoctor = '';\r\n        this.selectedHospital = '';\r\n        this.selectedReason = '';\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(`Error message: ${errorText}`);\r\n        console.error('Failed to book appointment:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while booking an appointment:', error);\r\n    }\r\n  }\r\n\r\n  closePopup() {\r\n    this.showSuccessPopup = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"appointment-booking\">\r\n        <h2>Book an Appointment</h2>\r\n        <form onSubmit={e => this.handleSubmit(e)}>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"name\">Enter Name</label>\r\n            <input type=\"text\" id=\"name\" value={this.formData.name} onInput={e => this.handleInputChange(e, 'name')} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"age\">Enter Age</label>\r\n            <input type=\"number\" id=\"age\" value={this.formData.age} onInput={e => this.handleInputChange(e, 'age')} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"gender\">Enter Gender</label>\r\n            <input type=\"text\" id=\"gender\" value={this.formData.gender} onInput={e => this.handleInputChange(e, 'gender')} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n            <input type=\"tel\" id=\"phoneNumber\" value={this.formData.phoneNumber} onInput={e => this.handleInputChange(e, 'phoneNumber')} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"diseaseCategory\">Select Disease Category</label>\r\n            <select id=\"diseaseCategory\" onInput={(e: Event) => this.handleInputChange(e, 'diseaseCategory')} required>\r\n              <option value=\"\">Select</option>\r\n              {this.diseaseCategories.map(category => (\r\n                <option value={category} key={category}>\r\n                  {category}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"reason\">Select Reason</label>\r\n            <select id=\"reason\" onInput={(e: Event) => this.handleReasonChange(e)} required>\r\n              <option value=\"\">Select</option>\r\n              {this.reasons.map(reason => (\r\n                <option value={reason} key={reason}>\r\n                  {reason}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"hospital\">Select Hospital</label>\r\n            <select id=\"hospital\" onInput={(e: Event) => this.handleHospitalChange(e)} required>\r\n              <option value=\"\">Select</option>\r\n              {this.hospitals.map(hospital => (\r\n                <option value={hospital} key={hospital}>\r\n                  {hospital}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"doctor\">Select Doctor</label>\r\n            <select id=\"doctor\" onInput={(e: Event) => this.handleDoctorChange(e)} required>\r\n              <option value=\"\">Select</option>\r\n              {this.doctors\r\n                .filter(doctor => doctor.specialization === this.formData.diseaseCategory && doctor.hospitalName === this.selectedHospital)\r\n                .map(doctor => (\r\n                  <option value={doctor.name} key={doctor.id}>\r\n                    {doctor.name} - Charges {doctor.pricePerHour}$ per Hour.\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"problemDescription\">Elaborate the Problem</label>\r\n            <textarea id=\"problemDescription\" value={this.formData.problemDescription} onInput={e => this.handleInputChange(e, 'problemDescription')} rows={4}></textarea>\r\n          </div>\r\n          <button type=\"submit\">Book Appointment</button>\r\n        </form>\r\n        {this.showSuccessPopup && (\r\n          <div class=\"popup-form\">\r\n            <div class=\"popup-content\">\r\n              <h3>Appointment booked successfully</h3>\r\n              <p>Your appointment has been successfully booked.</p>\r\n              <button onClick={() => this.closePopup()}>Close</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}
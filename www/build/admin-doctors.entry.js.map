{"file":"admin-doctors.entry.esm.js","mappings":"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","names":[],"sources":["src/components/AdminDoctors/Admin-Doctors.css?tag=admin-doctors&encapsulation=shadow","src/components/AdminDoctors/Admin-Doctors.tsx"],"sourcesContent":["/* admin-doctors.css */\r\n.doctor-grid {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    justify-content: flex-start;\r\n  }\r\n  \r\n  .doctor-card {\r\n    flex: 0 1 calc(33.33% - 20px);\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box; \r\n  }\r\n  \r\n.search-options {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  select {\r\n    background-color: #f5f5f5;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  select:hover {\r\n    background-color: #e0e0e0;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    transition: background-color 0.3s, color 0.3s;\r\n  }\r\n  \r\n  input[type=\"text\"]:focus {\r\n    background-color: #e0e0e0;\r\n    color: #333;\r\n  }\r\n\r\n  input[type=\"number\"] {\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    transition: background-color 0.3s, color 0.3s;\r\n  }\r\n  \r\n  input[type=\"number\"]:focus {\r\n    background-color: #e0e0e0;\r\n    color: #333;\r\n  }\r\n  \r\n  .addBtn{\r\n    background-color: rgb(124, 235, 124);\r\n    color: #0a0000;\r\n    width: 200px;\r\n    padding: 10px;\r\n    margin-top: 20px;\r\n    margin-left: 750px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .input-field {\r\n    border: 1px solid #ccc;\r\n    padding: 5px;\r\n    transition: border-color 0.2s ease;\r\n    margin-right: 20px;\r\n  }\r\n  \r\n  .input-field.focus {\r\n    border-color: #007bff;\r\n  }\r\n  \r\n  .input-field.blur {\r\n    border-color: #ccc;\r\n  }\r\n\r\n  .formCancel{\r\n    background-color: red;\r\n    color: white;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n    width: 100px;\r\n    align-items: center;\r\n  }\r\n\r\n  .formAdd{\r\n    background-color: rgb(241, 122, 66);\r\n    color: black;\r\n    width: 100px;\r\n    padding: 10px;\r\n  }","import { Component, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'admin-doctors',\r\n  styleUrl: 'Admin-Doctors.css',\r\n  shadow: true,\r\n})\r\nexport class AdminDoctors {\r\n  @State() doctors: Doctor[] = [];\r\n  @State() searchCriteria: string = '';\r\n  @State() searchOption: 'doctorName' | 'hospitalName' | 'specialization' = 'doctorName';\r\n  @State() editedHospitalName: string = '';\r\n  @State() sortOption: 'asc' | 'desc' = 'asc';\r\n  @State() filteredDoctors: Doctor[] = [];\r\n\r\n  @State() isAddDoctorPopupVisible: boolean = false;\r\n  @State() newDoctor: NewDoctor = {\r\n    name: '',\r\n    age: 0,\r\n    specialization: '',\r\n    hospitalName: '',\r\n    pricePerHour: 0,\r\n    isAvailable: false,\r\n  };\r\n  @State() specializationOptions: Set<string> = new Set();\r\n  @State() hospitalOptions: Set<string> = new Set();\r\n\r\n  async componentDidLoad() {\r\n    try {\r\n      const response = await fetch('https://localhost:7183/api/Hospitals');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        data.forEach(hospital => {\r\n          console.log(hospital);\r\n          const specializationValues = hospital.hospitalServices.split(',');\r\n          specializationValues.forEach(value => this.specializationOptions.add(value.trim()));\r\n          this.hospitalOptions.add(hospital.hospitalName);\r\n        });\r\n      } else {\r\n        console.error('Failed to fetch data from the Hospitals API');\r\n      }\r\n      const responseDoctor = await fetch('https://localhost:7183/api/doctors');\r\n      if (responseDoctor.ok) {\r\n        const doctorData = await responseDoctor.json();\r\n        this.doctors = doctorData;\r\n      } else {\r\n        console.error('Failed to fetch data from the Doctors API');\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching data:', error);\r\n    }\r\n  }\r\n\r\n  editHospital(doctorId: number) {\r\n    const newHospital = prompt('Enter the new hospital name:');\r\n    if (newHospital !== null) {\r\n      this.updateDoctorHospitalName(doctorId, newHospital);\r\n      this.editedHospitalName = newHospital;\r\n    }\r\n  }\r\n\r\n  async deleteDoctor(doctorId: number) {\r\n    try {\r\n      if (confirm('Are you sure you want to delete this doctor?')) {\r\n        const apiUrl = `https://localhost:7183/api/doctors/${doctorId}`;\r\n\r\n        const response = await fetch(apiUrl, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Doctor deleted successfully');\r\n          this.doctors = this.doctors.filter(doctor => doctor.id !== doctorId);\r\n        } else {\r\n          const errorText = await response.text();\r\n          console.error(`Error message: ${errorText}`);\r\n          console.error('Failed to delete doctor:', response.status, response.statusText);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while deleting a doctor:', error);\r\n    }\r\n  }\r\n\r\n  toggleSortOrder() {\r\n    this.sortOption = this.sortOption === 'asc' ? 'desc' : 'asc';\r\n    this.filteredDoctors = this.sortDoctorsByPrice(this.getFilteredDoctors());\r\n  }\r\n\r\n  sortDoctorsByPrice(doctors: Doctor[]) {\r\n    return doctors.slice().sort((a, b) => {\r\n      if (this.sortOption === 'asc') {\r\n        return a.pricePerHour - b.pricePerHour;\r\n      } else {\r\n        return b.pricePerHour - a.pricePerHour;\r\n      }\r\n    });\r\n  }\r\n\r\n  getFilteredDoctors() {\r\n    if (!this.searchCriteria) {\r\n      return this.doctors;\r\n    }\r\n\r\n    const searchTerm = this.searchCriteria.toLowerCase();\r\n\r\n    return this.doctors.filter(doctor => {\r\n      if (this.searchOption === 'doctorName') {\r\n        return doctor.name.toLowerCase().includes(searchTerm);\r\n      } else if (this.searchOption === 'hospitalName') {\r\n        return doctor.hospitalName.toLowerCase().includes(searchTerm);\r\n      } else if (this.searchOption === 'specialization') {\r\n        return doctor.specialization.toLowerCase().includes(searchTerm);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  toggleAddDoctorPopup() {\r\n    this.isAddDoctorPopupVisible = !this.isAddDoctorPopupVisible;\r\n  }\r\n\r\n  handleInputChange(event: Event, field: keyof NewDoctor) {\r\n    const inputValue = (event.target as HTMLInputElement).value;\r\n\r\n    if (field === 'isAvailable') {\r\n      const isChecked = (event.target as HTMLInputElement).checked;\r\n      this.newDoctor = {\r\n        ...this.newDoctor,\r\n        [field]: isChecked,\r\n      };\r\n    } else if (field === 'age') {\r\n      const parsedValue = parseInt(inputValue, 10);\r\n      if (!isNaN(parsedValue)) {\r\n        this.newDoctor = {\r\n          ...this.newDoctor,\r\n          [field]: parsedValue,\r\n        };\r\n      }\r\n    } else {\r\n      this.newDoctor = {\r\n        ...this.newDoctor,\r\n        [field]: inputValue,\r\n      };\r\n    }\r\n  }\r\n\r\n  async addDoctor() {\r\n    try {\r\n      const apiUrl = 'https://localhost:7183/api/doctors';\r\n\r\n      const newDoctorData = {\r\n        name: this.newDoctor.name,\r\n        age: this.newDoctor.age,\r\n        hospitalName: this.newDoctor.hospitalName,\r\n        pricePerHour: this.newDoctor.pricePerHour,\r\n        specialization: this.newDoctor.specialization,\r\n        isAvailable: this.newDoctor.isAvailable,\r\n      };\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newDoctorData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Doctor added successfully');\r\n        const responseData = await response.json();\r\n        const newDoctorWithID: Doctor = {\r\n          ...newDoctorData,\r\n          id: responseData.id,\r\n        };\r\n        this.doctors = [...this.doctors, newDoctorWithID];\r\n        this.toggleAddDoctorPopup();\r\n        this.newDoctor = {\r\n          name: '',\r\n          age: 0,\r\n          specialization: '',\r\n          hospitalName: '',\r\n          pricePerHour: 0,\r\n          isAvailable: false,\r\n        };\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(`Error message: ${errorText}`);\r\n        console.error('Failed to add doctor:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while adding a doctor:', error);\r\n    }\r\n  }\r\n\r\n  async updateDoctorHospitalName(doctorId: number, newHospitalName: string) {\r\n    try {\r\n      const existingDoctor = this.doctors.find(doctor => doctor.id === doctorId);\r\n      if (!existingDoctor) {\r\n        console.error('Doctor not found');\r\n        return;\r\n      }\r\n      const apiUrl = `https://localhost:7183/api/doctors/${doctorId}`;\r\n      const updatedData = {\r\n        id: existingDoctor.id,\r\n        name: existingDoctor.name,\r\n        age: existingDoctor.age,\r\n        hospitalName: newHospitalName,\r\n        pricePerHour: existingDoctor.pricePerHour,\r\n        isAvailable: existingDoctor.isAvailable,\r\n        specialization: existingDoctor.specialization,\r\n      };\r\n\r\n      const response = await fetch(apiUrl, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Doctor updated successfully');\r\n        const updatedDoctors = this.doctors.map(doctor => {\r\n          if (doctor.id === doctorId) {\r\n            return {\r\n              ...doctor,\r\n              hospitalName: newHospitalName,\r\n            };\r\n          }\r\n          return doctor;\r\n        });\r\n\r\n        this.doctors = updatedDoctors;\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error(`Error message: ${errorText}`);\r\n        console.error('Failed to update doctor:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while updating a doctor:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const sortedDoctors = this.sortDoctorsByPrice(this.getFilteredDoctors());\r\n\r\n    return (\r\n      <div>\r\n        <button class=\"addBtn\" onClick={() => this.toggleAddDoctorPopup()}>\r\n          Add Doctor\r\n        </button>\r\n        {this.isAddDoctorPopupVisible && (\r\n          <div class=\"popup\">\r\n            <h2>Add Doctor</h2>\r\n            <form\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                this.addDoctor();\r\n              }}\r\n            >\r\n              <label>\r\n                Name:\r\n                <input\r\n                  class=\"input-field\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={this.newDoctor.name}\r\n                  onInput={e => this.handleInputChange(e, 'name')}\r\n                  onFocus={e => (e.target as HTMLInputElement).classList.add('focus')}\r\n                  onBlur={e => (e.target as HTMLInputElement).classList.remove('focus')}\r\n                  name=\"name\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Age:\r\n                <input\r\n                  class=\"input-field\"\r\n                  type=\"number\"\r\n                  value={this.newDoctor.age}\r\n                  onInput={e => this.handleInputChange(e, 'age')}\r\n                  onFocus={e => (e.target as HTMLInputElement).classList.add('focus')}\r\n                  onBlur={e => (e.target as HTMLInputElement).classList.remove('focus')}\r\n                  name=\"age\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Specialization:\r\n                <select\r\n                  class=\"input-field\"\r\n                  onInput={e => this.handleInputChange(e, 'specialization')}\r\n                  onFocus={e => (e.target as HTMLSelectElement).classList.add('focus')}\r\n                  onBlur={e => (e.target as HTMLSelectElement).classList.remove('focus')}\r\n                  name=\"specialization\"\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Select Specialization\r\n                  </option>\r\n                  {Array.from(this.specializationOptions).map(option => (\r\n                    <option value={option} key={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n              <label>\r\n                Hospital:\r\n                <select\r\n                  class=\"input-field\"\r\n                  onInput={e => this.handleInputChange(e, 'hospitalName')}\r\n                  onFocus={e => (e.target as HTMLSelectElement).classList.add('focus')}\r\n                  onBlur={e => (e.target as HTMLSelectElement).classList.remove('focus')}\r\n                  name=\"hospital\"\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Select Hospital\r\n                  </option>\r\n                  {Array.from(this.hospitalOptions).map(option => (\r\n                    <option value={option} key={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n              <label>\r\n                Price:\r\n                <input\r\n                  class=\"input-field\"\r\n                  type=\"number\"\r\n                  value={this.newDoctor.pricePerHour}\r\n                  onInput={e => this.handleInputChange(e, 'pricePerHour')}\r\n                  onFocus={e => (e.target as HTMLInputElement).classList.add('focus')}\r\n                  onBlur={e => (e.target as HTMLInputElement).classList.remove('focus')}\r\n                  name=\"price\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Available:\r\n                <input\r\n                  class=\"input-field\"\r\n                  type=\"checkbox\"\r\n                  checked={this.newDoctor.isAvailable}\r\n                  onInput={e => this.handleInputChange(e, 'isAvailable')}\r\n                  onFocus={e => (e.target as HTMLInputElement).classList.add('focus')}\r\n                  name=\"available\"\r\n                  onBlur={e => (e.target as HTMLInputElement).classList.remove('focus')}\r\n                />\r\n              </label>\r\n\r\n              <button type=\"submit\" class=\"formAdd\">\r\n                Add\r\n              </button>\r\n            </form>\r\n            <button onClick={() => this.toggleAddDoctorPopup()} class=\"formCancel\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div class=\"search-options\">\r\n          <label>\r\n            Search by:\r\n            <select onChange={e => (this.searchOption = (e.target as HTMLSelectElement).value as 'doctorName' | 'hospitalName' | 'specialization')}>\r\n              <option value=\"doctorName\" selected={this.searchOption === 'doctorName'}>\r\n                Doctor Name\r\n              </option>\r\n              <option value=\"hospitalName\" selected={this.searchOption === 'hospitalName'}>\r\n                Hospital Name\r\n              </option>\r\n              <option value=\"specialization\" selected={this.searchOption === 'specialization'}>\r\n                Specialization\r\n              </option>\r\n            </select>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={`Search by ${this.searchOption === 'doctorName' ? 'Doctor' : 'Hospital'} Name`}\r\n            value={this.searchCriteria}\r\n            onInput={e => (this.searchCriteria = (e.target as HTMLInputElement).value)}\r\n          />\r\n          <button onClick={() => this.toggleSortOrder()}>Sort by Price {this.sortOption === 'asc' ? 'Ascending' : 'Descending'}</button>\r\n        </div>\r\n        <div class=\"doctor-grid\">\r\n          {sortedDoctors.map(doctor => (\r\n            <div class=\"doctor-card\" key={doctor.id}>\r\n              <div>\r\n                <strong>{doctor.name}</strong>\r\n                <br />\r\n                ID: {doctor.id}\r\n                <br />\r\n                Age: {doctor.age}\r\n                <br />\r\n                Specialization: {doctor.specialization}\r\n                <br />\r\n                Hospital: <span id={`hospital-${doctor.id}`}>{doctor.hospitalName}</span>\r\n                <br />\r\n                Price: ${doctor.pricePerHour}\r\n                <br />\r\n                Available: {doctor.isAvailable ? 'Yes' : 'No'}\r\n              </div>\r\n              <div>\r\n                <button onClick={() => this.editHospital(doctor.id)}>Edit</button>\r\n                <button onClick={() => this.deleteDoctor(doctor.id)}>Delete</button> {/* Pass the doctor's id here */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface Doctor {\r\n  id: number;\r\n  name: string;\r\n  age: number;\r\n  specialization: string;\r\n  hospitalName: string;\r\n  pricePerHour: number;\r\n  isAvailable: boolean;\r\n}\r\n\r\ninterface NewDoctor {\r\n  name: string;\r\n  age: number;\r\n  specialization: string;\r\n  hospitalName: string;\r\n  pricePerHour: number;\r\n  isAvailable: boolean;\r\n}\r\n"],"version":3}
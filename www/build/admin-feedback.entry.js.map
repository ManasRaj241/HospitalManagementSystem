{"file":"admin-feedback.entry.esm.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,yvBAAyvB;;MCOrwB,aAAa;;;wBACY,EAAE;4BACO,IAAI;;EAEjD,iBAAiB;IACf,IAAI,CAAC,iBAAiB,EAAE,CAAC;GAC1B;EAED,MAAM,iBAAiB;IACrB,IAAI;MACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;MACrE,IAAI,QAAQ,CAAC,EAAE,EAAE;QACf,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;OAChC;WAAM;QACL,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;OACvF;KACF;IAAC,OAAO,KAAK,EAAE;MACd,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;KACzE;GACF;EAED,YAAY,CAAC,QAAkB;IAC7B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;GAClC;EAED,UAAU;IACR,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;GAC9B;EAED,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,gBAAgB,IACzB,iBACE,iBACE,cACE,qBAAa,EACb,gCAAwB,EACxB,yBAAiB,CACd,CACC,EACR,iBACG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,KAC7B,UAAI,GAAG,EAAE,QAAQ,CAAC,WAAW,IAC3B,cAAK,QAAQ,CAAC,WAAW,CAAM,EAC/B,cAAK,QAAQ,CAAC,UAAU,CAAM,EAC9B,cACE,cAAQ,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAwB,CACvE,CACF,CACN,CAAC,CACI,CACF,EAEP,IAAI,CAAC,gBAAgB,KACpB,WAAK,KAAK,EAAC,gBAAgB,IACzB,WAAK,KAAK,EAAC,eAAe,IACxB,cAAQ,KAAK,EAAC,cAAc,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE,QAEpD,EACT,yBAAiB,EACjB,aAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAK,CACnC,CACF,CACP,CACG,EACN;GACH;;;;;;","names":[],"sources":["src/components/admin-feedback/admin-feedback.css?tag=admin-feedback&encapsulation=shadow","src/components/admin-feedback/admin-feedback.tsx"],"sourcesContent":["/* admin-feedback.css */\r\n.feedback-table {\r\n    margin: 20px;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  button {\r\n    padding: 5px 10px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .feedback-popup {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .popup-content {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    position: relative;\r\n  }\r\n  \r\n  .close-button {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: Red;\r\n    border: none;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  ","import { Component, State, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'admin-feedback',\r\n  styleUrl: 'admin-feedback.css',\r\n  shadow: true,\r\n})\r\nexport class AdminFeedback {\r\n  @State() feedbackData: Feedback[] = [];\r\n  @State() selectedFeedback: Feedback | null = null;\r\n\r\n  componentWillLoad() {\r\n    this.fetchFeedbackData();\r\n  }\r\n\r\n  async fetchFeedbackData() {\r\n    try {\r\n      const response = await fetch('https://localhost:7183/api/feedbacks');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        this.feedbackData = data;\r\n        console.log(this.feedbackData);\r\n      } else {\r\n        console.error('Failed to fetch feedback data:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred while fetching feedback data:', error);\r\n    }\r\n  }\r\n\r\n  viewFeedback(feedback: Feedback) {\r\n    this.selectedFeedback = feedback;\r\n  }\r\n\r\n  closePopup() {\r\n    this.selectedFeedback = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"feedback-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Assigned Doctor</th>\r\n              <th>Feedback</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.feedbackData.map(feedback => (\r\n              <tr key={feedback.patientName}>\r\n                <td>{feedback.patientName}</td>\r\n                <td>{feedback.doctorName}</td>\r\n                <td>\r\n                  <button onClick={() => this.viewFeedback(feedback)}>View Feedback</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {this.selectedFeedback && (\r\n          <div class=\"feedback-popup\">\r\n            <div class=\"popup-content\">\r\n              <button class=\"close-button\" onClick={() => this.closePopup()}>\r\n                X\r\n              </button>\r\n              <h2>Feedback</h2>\r\n              <p>{this.selectedFeedback.feedback}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface Feedback {\r\n  patientName: string;\r\n  doctorName: string;\r\n  feedback: string;\r\n}\r\n"],"version":3}
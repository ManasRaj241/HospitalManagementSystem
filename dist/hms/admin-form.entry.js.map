{"file":"admin-form.entry.esm.js","mappings":";;AAAA,MAAM,YAAY,GAAG,yrBAAyrB;;MCOjsB,SAAS;;;IAMpB,iBAAY,GAAG;MACb,MAAM,IAAI,GAAG;QACX,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,WAAW,EAAE,IAAI,CAAC,WAAW;QAC7B,IAAI,EAAE,OAAO;OACd,CAAC;MAEF,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,6CAA6C,EAAE;UAC1E,MAAM,EAAE,MAAM;UACd,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;WACnC;UACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC3B,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,EAAE,EAAE;UACf,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;SACxC;aAAM;UACL,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC5C;OACF;MAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;OACnD;KACF,CAAC;gBA/Bc,EAAE;oBACE,EAAE;iBACL,EAAE;uBACI,EAAE;;EA8BzB,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,YAAY,IACrB,8BAAsB,EACtB,YAAM,QAAQ,EAAE,IAAI,CAAC,YAAY,IAC/B,WAAK,KAAK,EAAC,YAAY,IACrB,aAAO,OAAO,EAAC,MAAM,WAAa,EAClC,aAAO,IAAI,EAAC,MAAM,EAAC,EAAE,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAG,CACxH,EACN,WAAK,KAAK,EAAC,YAAY,IACrB,aAAO,OAAO,EAAC,UAAU,eAAiB,EAC1C,aAAO,IAAI,EAAC,UAAU,EAAC,EAAE,EAAC,UAAU,EAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,QAAQ,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAG,CACxI,EACN,WAAK,KAAK,EAAC,YAAY,IACrB,aAAO,OAAO,EAAC,OAAO,YAAc,EACpC,aAAO,IAAI,EAAC,OAAO,EAAC,EAAE,EAAC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAG,CAC5H,EACN,WAAK,KAAK,EAAC,YAAY,IACrB,aAAO,OAAO,EAAC,aAAa,mBAAqB,EACjD,aAAO,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,aAAa,EAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,WAAW,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,EAAE,QAAQ,SAAG,CAC5I,EACN,cAAQ,IAAI,EAAC,QAAQ,aAAgB,CAChC,CACH,EACN;GACH;;;;;;","names":[],"sources":["src/components/AdminForm/admin-form.css?tag=admin-form&encapsulation=shadow","src/components/AdminForm/Admin-form.tsx"],"sourcesContent":[".admin-form {\r\n    max-width: 400px; \r\n    margin: 0 auto;\r\n    margin-bottom: 20px;\r\n    margin-top: 20px; \r\n    padding: 20px;\r\n    border: 2px solid #3498db;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  h2 {\r\n    color: #db344a;\r\n    margin-bottom: 30px;\r\n    text-align: center; \r\n  }\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 15px; \r\n  }\r\n  \r\n  label {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input {\r\n    padding: 12px; \r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    outline: none;\r\n    transition: border-color 0.3s;\r\n    width: 300px; \r\n  }\r\n  \r\n  input:focus {\r\n    border-color: #3498db;\r\n  }\r\n  \r\n  button {\r\n    background-color: #3498db;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 12px 20px; \r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    width: 100%;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #2980b9;\r\n  }\r\n  ","import { Component, h, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'admin-form',\r\n  styleUrl: 'admin-form.css',\r\n  shadow: true,\r\n})\r\nexport class AdminForm {\r\n  @State() name = '';\r\n  @State() password = '';\r\n  @State() email = '';\r\n  @State() phoneNumber = '';\r\n\r\n  handleSubmit = async () => {\r\n    const data = {\r\n      name: this.name,\r\n      password: this.password,\r\n      email: this.email,\r\n      phoneNumber: this.phoneNumber,\r\n      role: 'Admin',\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://localhost:7183/api/UserDetailsOfHMS', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Post request successful');\r\n      } else {\r\n        console.error('Error making post request');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error making post request', error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"admin-form\">\r\n        <h2>Add New Admin</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" value={this.name} onInput={e => (this.name = (e.target as HTMLInputElement).value)} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" value={this.password} onInput={e => (this.password = (e.target as HTMLInputElement).value)} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" value={this.email} onInput={e => (this.email = (e.target as HTMLInputElement).value)} required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n            <input type=\"tel\" id=\"phoneNumber\" value={this.phoneNumber} onInput={e => (this.phoneNumber = (e.target as HTMLInputElement).value)} required />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}